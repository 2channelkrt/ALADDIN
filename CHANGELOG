Aladdin Pre-Release, v0.2.0
10-17-2014
*Implemented: Major refactoring of Aladdin for cache integration:
              Datapath and Scratchpad have each been divided into parent-child
              relationships;
              a. Added BaseDatapath parent class that does not rely on any
              memory-specific behavior. ScratchDatapath.cpp inherits from
              BaseDatapath.cpp to model accelerators connetected with a local
              scratchpad memory.
              b. Added MemoryInterface parent class that is generic for any
              memory structure. Scratchpad.cpp inherits from MemoryInterface.cpp
              for scratchpads. Future implementations of cache-based memory
              interface should follow MemoryInterface.
--Sam Xi and Sophia Shao

Aladdin Pre-Release, v0.1.4
09-21-2014
*Fixed: remove read/write graph file I/O operation; just read graph once and
store it in memory; significant speedup;

--Sophia Shao

Aladdin Pre-Release, v0.1.3
09-05-2014
*Fixed: base address initialization: for the case where there is bitcast between
gep and load/store
*Implemented: handle multi-dimention arrays
*Implemented: track dependences forwarding in function call to handle
degenerated array names

--Sophia Shao

Aladdin Pre-Release, v0.1.2
08-08-2014
*Fixed: tree height optimization.
*Fixed: complete partition: when completely partitioning all the arrays in an application.
*Fixed: store buffer: node_id overflow.
*Fixed: loop pipelining: control dependence between basic blocks cleaned up.

--Sophia Shao

Aladdin Pre-Release, v0.1.1
08-03-2014
*Fixed: store memory address using long long instead of unsigned
*Fixed: update the scheduler to keep the timestamp of when nodes are fired
*Fixed: remove function/sub-graph optimization and scheduling: all the
  optimizations are applied to the whole graph; improve optimization and
  scheduling speed.
*Implemented: Separate loop unrolling and loop pipelining; user can turn on/off
  loop pipeling from config file
*Implemented: Initial support for unrolling inner loops in a nested loop.
*Implemented: Initial support for multi-loop function.

--Sophia Shao

Aladdin Pre-Release, v0.1.0
07-18-2014
*First Release
*Implemented: Build the DDDG from an LLVM IR trace
*Implemented: Optimizations: loop unrolling, memory ambiguation, lood
  forwarding, store forwarding, remove repeated store, memory to register, memory
  partition, loop flattening, tree height reduction
*Implemented: Scheduler constraining memory bandwidth
*Implemented: FU and MEM power models

--Sophia Shao
